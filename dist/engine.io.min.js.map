{"version":3,"file":"engine.io.min.js","sources":["../node_modules/has-cors/index.js","../build/esm/globalThis.browser.js","../build/esm/xmlhttprequest.js","../build/esm/util.js","../node_modules/@socket.io/component-emitter/index.js","../node_modules/engine.io-parser/build/esm/commons.js","../node_modules/base64-arraybuffer/dist/base64-arraybuffer.es5.js","../node_modules/engine.io-parser/build/esm/encodePacket.browser.js","../node_modules/yeast/index.js","../node_modules/engine.io-parser/build/esm/decodePacket.browser.js","../node_modules/engine.io-parser/build/esm/index.js","../build/esm/transport.js","../node_modules/parseqs/index.js","../build/esm/transports/polling.js","../build/esm/transports/polling-xhr.js","../build/esm/transports/websocket-constructor.browser.js","../build/esm/transports/websocket.js","../build/esm/transports/index.js","../node_modules/parseuri/index.js","../build/esm/socket.js","../build/esm/browser-entrypoint.js"],"sourcesContent":["\n/**\n * Module exports.\n *\n * Logic borrowed from Modernizr:\n *\n *   - https://github.com/Modernizr/Modernizr/blob/master/feature-detects/cors.js\n */\n\ntry {\n  module.exports = typeof XMLHttpRequest !== 'undefined' &&\n    'withCredentials' in new XMLHttpRequest();\n} catch (err) {\n  // if XMLHttp support is disabled in IE then it will throw\n  // when trying to create\n  module.exports = false;\n}\n","export default (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\n","// browser shim for xmlhttprequest module\nimport hasCORS from \"has-cors\";\nimport globalThis from \"./globalThis.js\";\nexport default function (opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\n","import globalThis from \"./globalThis.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = clearTimeout.bind(globalThis);\n    }\n}\n","\n/**\n * Expose `Emitter`.\n */\n\nif (typeof module !== 'undefined') {\n  module.exports = Emitter;\n}\n\n/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nfunction Emitter(obj) {\n  if (obj) return mixin(obj);\n};\n\n// allow default import\nEmitter.default = Emitter;\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach(key => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","/*\n * base64-arraybuffer 1.0.1 <https://github.com/niklasvh/base64-arraybuffer>\n * Copyright (c) 2021 Niklas von Hertzen <https://hertzen.com>\n * Released under MIT License\n */\nvar chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nvar lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (var i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nvar encode = function (arraybuffer) {\n    var bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nvar decode = function (base64) {\n    var bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    var arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n\nexport { decode, encode };\n//# sourceMappingURL=base64-arraybuffer.es5.js.map\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = obj => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + content);\n    };\n    return fileReader.readAsDataURL(data);\n};\nexport default encodePacket;\n","'use strict';\n\nvar alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split('')\n  , length = 64\n  , map = {}\n  , seed = 0\n  , i = 0\n  , prev;\n\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nfunction encode(num) {\n  var encoded = '';\n\n  do {\n    encoded = alphabet[num % length] + encoded;\n    num = Math.floor(num / length);\n  } while (num > 0);\n\n  return encoded;\n}\n\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nfunction decode(str) {\n  var decoded = 0;\n\n  for (i = 0; i < str.length; i++) {\n    decoded = decoded * length + map[str.charAt(i)];\n  }\n\n  return decoded;\n}\n\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nfunction yeast() {\n  var now = encode(+new Date());\n\n  if (now !== prev) return seed = 0, prev = now;\n  return now +'.'+ encode(seed++);\n}\n\n//\n// Map each character to its index.\n//\nfor (; i < length; i++) map[alphabet[i]] = i;\n\n//\n// Expose the `yeast`, `encode` and `decode` functions.\n//\nyeast.encode = encode;\nyeast.decode = decode;\nmodule.exports = yeast;\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE } from \"./commons.js\";\nimport { decode } from \"base64-arraybuffer\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType)\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType)\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1)\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type]\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            return data instanceof ArrayBuffer ? new Blob([data]) : data;\n        case \"arraybuffer\":\n        default:\n            return data; // assuming the data is already an ArrayBuffer\n    }\n};\nexport default decodePacket;\n","import encodePacket from \"./encodePacket.js\";\nimport decodePacket from \"./decodePacket.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, encodedPacket => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload };\n","import { decodePacket } from \"engine.io-parser\";\nimport Emitter from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} options.\n     * @api private\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.readyState = \"\";\n        this.socket = opts.socket;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} str\n     * @return {Transport} for chaining\n     * @api protected\n     */\n    onError(msg, desc) {\n        const err = new Error(msg);\n        // @ts-ignore\n        err.type = \"TransportError\";\n        // @ts-ignore\n        err.description = desc;\n        super.emit(\"error\", err);\n        return this;\n    }\n    /**\n     * Opens the transport.\n     *\n     * @api public\n     */\n    open() {\n        if (\"closed\" === this.readyState || \"\" === this.readyState) {\n            this.readyState = \"opening\";\n            this.doOpen();\n        }\n        return this;\n    }\n    /**\n     * Closes the transport.\n     *\n     * @api public\n     */\n    close() {\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     * @api public\n     */\n    send(packets) {\n        if (\"open\" === this.readyState) {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @api protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emit(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @api protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @api protected\n     */\n    onPacket(packet) {\n        super.emit(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @api protected\n     */\n    onClose() {\n        this.readyState = \"closed\";\n        super.emit(\"close\");\n    }\n}\n","/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\n\nexports.encode = function (obj) {\n  var str = '';\n\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) {\n      if (str.length) str += '&';\n      str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n    }\n  }\n\n  return str;\n};\n\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\n\nexports.decode = function(qs){\n  var qry = {};\n  var pairs = qs.split('&');\n  for (var i = 0, l = pairs.length; i < l; i++) {\n    var pair = pairs[i].split('=');\n    qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n  }\n  return qry;\n};\n","import { Transport } from \"../transport.js\";\nimport yeast from \"yeast\";\nimport parseqs from \"parseqs\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nexport class Polling extends Transport {\n    constructor() {\n        super(...arguments);\n        this.polling = false;\n    }\n    /**\n     * Transport name.\n     */\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @api private\n     */\n    doOpen() {\n        this.poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} callback upon buffers are flushed and transport is paused\n     * @api private\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this.polling || !this.writable) {\n            let total = 0;\n            if (this.polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @api public\n     */\n    poll() {\n        this.polling = true;\n        this.doPoll();\n        this.emit(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @api private\n     */\n    onData(data) {\n        const callback = packet => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose();\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this.polling = false;\n            this.emit(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this.poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @api private\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} data packets\n     * @param {Function} drain callback\n     * @api private\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, data => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emit(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @api private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        let port = \"\";\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"https\" === schema && Number(this.opts.port) !== 443) ||\n                (\"http\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        const encodedQuery = parseqs.encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n}\n","/* global attachEvent */\nimport * as XMLHttpRequestModule from \"xmlhttprequest-ssl\";\nimport globalThis from \"../globalThis.js\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport Emitter from \"@socket.io/component-emitter\";\nimport { Polling } from \"./polling.js\";\nconst XMLHttpRequest = XMLHttpRequestModule.default || XMLHttpRequestModule;\n/**\n * Empty function\n */\nfunction empty() { }\nconst hasXHR2 = (function () {\n    const xhr = new XMLHttpRequest({\n        xdomain: false\n    });\n    return null != xhr.responseType;\n})();\nexport class XHR extends Polling {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @api public\n     */\n    constructor(opts) {\n        super(opts);\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n            this.xs = opts.secure !== isSSL;\n        }\n        /**\n         * XHR supports binary\n         */\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n    }\n    /**\n     * Creates a request.\n     *\n     * @param {String} method\n     * @api private\n     */\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd, xs: this.xs }, this.opts);\n        return new Request(this.uri(), opts);\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @api private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", err => {\n            this.onError(\"xhr post error\", err);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @api private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", err => {\n            this.onError(\"xhr poll error\", err);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @api public\n     */\n    constructor(uri, opts) {\n        super();\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.method = opts.method || \"GET\";\n        this.uri = uri;\n        this.async = false !== opts.async;\n        this.data = undefined !== opts.data ? opts.data : null;\n        this.create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @api private\n     */\n    create() {\n        const opts = pick(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this.opts.xd;\n        opts.xscheme = !!this.opts.xs;\n        const xhr = (this.xhr = new XMLHttpRequest(opts));\n        try {\n            xhr.open(this.method, this.uri, this.async);\n            try {\n                if (this.opts.extraHeaders) {\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this.opts.extraHeaders) {\n                        if (this.opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this.method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this.opts.withCredentials;\n            }\n            if (this.opts.requestTimeout) {\n                xhr.timeout = this.opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this.onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this.data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this.onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this.index = Request.requestsCount++;\n            Request.requests[this.index] = this;\n        }\n    }\n    /**\n     * Called upon successful response.\n     *\n     * @api private\n     */\n    onSuccess() {\n        this.emit(\"success\");\n        this.cleanup();\n    }\n    /**\n     * Called if we have data.\n     *\n     * @api private\n     */\n    onData(data) {\n        this.emit(\"data\", data);\n        this.onSuccess();\n    }\n    /**\n     * Called upon error.\n     *\n     * @api private\n     */\n    onError(err) {\n        this.emit(\"error\", err);\n        this.cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @api private\n     */\n    cleanup(fromError) {\n        if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n            return;\n        }\n        this.xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this.xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this.index];\n        }\n        this.xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @api private\n     */\n    onLoad() {\n        const data = this.xhr.responseText;\n        if (data !== null) {\n            this.onData(data);\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @api public\n     */\n    abort() {\n        this.cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\n","import globalThis from \"../globalThis.js\";\nexport const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return cb => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const WebSocket = globalThis.WebSocket || globalThis.MozWebSocket;\nexport const usingBrowserWebSocket = true;\nexport const defaultBinaryType = \"arraybuffer\";\n","import { Transport } from \"../transport.js\";\nimport parseqs from \"parseqs\";\nimport yeast from \"yeast\";\nimport { pick } from \"../util.js\";\nimport { defaultBinaryType, nextTick, usingBrowserWebSocket, WebSocket } from \"./websocket-constructor.js\";\nimport { encodePacket } from \"engine.io-parser\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class WS extends Transport {\n    /**\n     * WebSocket transport constructor.\n     *\n     * @api {Object} connection options\n     * @api public\n     */\n    constructor(opts) {\n        super(opts);\n        this.supportsBinary = !opts.forceBase64;\n    }\n    /**\n     * Transport name.\n     *\n     * @api public\n     */\n    get name() {\n        return \"websocket\";\n    }\n    /**\n     * Opens socket.\n     *\n     * @api private\n     */\n    doOpen() {\n        if (!this.check()) {\n            // let probe timeout\n            return;\n        }\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws =\n                usingBrowserWebSocket && !isReactNative\n                    ? protocols\n                        ? new WebSocket(uri, protocols)\n                        : new WebSocket(uri)\n                    : new WebSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emit(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType || defaultBinaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @api private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = this.onClose.bind(this);\n        this.ws.onmessage = ev => this.onData(ev.data);\n        this.ws.onerror = e => this.onError(\"websocket error\", e);\n    }\n    /**\n     * Writes data to socket.\n     *\n     * @param {Array} array of packets.\n     * @api private\n     */\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, data => {\n                // always create a new object (GH-437)\n                const opts = {};\n                if (!usingBrowserWebSocket) {\n                    if (packet.options) {\n                        opts.compress = packet.options.compress;\n                    }\n                    if (this.opts.perMessageDeflate) {\n                        const len = \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\n                        if (len < this.opts.perMessageDeflate.threshold) {\n                            opts.compress = false;\n                        }\n                    }\n                }\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    if (usingBrowserWebSocket) {\n                        // TypeError is thrown when passing the second argument on Safari\n                        this.ws.send(data);\n                    }\n                    else {\n                        this.ws.send(data, opts);\n                    }\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emit(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    /**\n     * Closes socket.\n     *\n     * @api private\n     */\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @api private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        let port = \"\";\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"wss\" === schema && Number(this.opts.port) !== 443) ||\n                (\"ws\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        const encodedQuery = parseqs.encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Feature detection for WebSocket.\n     *\n     * @return {Boolean} whether this transport is available.\n     * @api public\n     */\n    check() {\n        return (!!WebSocket &&\n            !(\"__initialize\" in WebSocket && this.name === WS.prototype.name));\n    }\n}\n","import { XHR } from \"./polling-xhr.js\";\nimport { WS } from \"./websocket.js\";\nexport const transports = {\n    websocket: WS,\n    polling: XHR\n};\n","/**\n * Parses an URI\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\n\nvar re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\n\nvar parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\n\nmodule.exports = function parseuri(str) {\n    var src = str,\n        b = str.indexOf('['),\n        e = str.indexOf(']');\n\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n\n    var m = re.exec(str || ''),\n        uri = {},\n        i = 14;\n\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n\n    return uri;\n};\n\nfunction pathNames(obj, path) {\n    var regx = /\\/{2,9}/g,\n        names = path.replace(regx, \"/\").split(\"/\");\n\n    if (path.substr(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.substr(path.length - 1, 1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n\n    return names;\n}\n\nfunction queryKey(uri, query) {\n    var data = {};\n\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n\n    return data;\n}\n","import { transports } from \"./transports/index.js\";\nimport { installTimerFunctions } from \"./util.js\";\nimport parseqs from \"parseqs\";\nimport parseuri from \"parseuri\";\nimport Emitter from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nexport class Socket extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri or options\n     * @param {Object} opts - options\n     * @api public\n     */\n    constructor(uri, opts = {}) {\n        super();\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            uri = parseuri(uri);\n            opts.hostname = uri.host;\n            opts.secure = uri.protocol === \"https\" || uri.protocol === \"wss\";\n            opts.port = uri.port;\n            if (uri.query)\n                opts.query = uri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parseuri(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = opts.transports || [\"polling\", \"websocket\"];\n        this.readyState = \"\";\n        this.writeBuffer = [];\n        this.prevBufferLen = 0;\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024\n            },\n            transportOptions: {},\n            closeOnBeforeunload: true\n        }, opts);\n        this.opts.path = this.opts.path.replace(/\\/$/, \"\") + \"/\";\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = parseqs.decode(this.opts.query);\n        }\n        // set on handshake\n        this.id = null;\n        this.upgrades = null;\n        this.pingInterval = null;\n        this.pingTimeout = null;\n        // set on heartbeat\n        this.pingTimeoutTimer = null;\n        if (typeof addEventListener === \"function\") {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                addEventListener(\"beforeunload\", () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                }, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this.offlineEventListener = () => {\n                    this.onClose(\"transport close\");\n                };\n                addEventListener(\"offline\", this.offlineEventListener, false);\n            }\n        }\n        this.open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} transport name\n     * @return {Transport}\n     * @api private\n     */\n    createTransport(name) {\n        const query = clone(this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts.transportOptions[name], this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port\n        });\n        return new transports[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @api private\n     */\n    open() {\n        let transport;\n        if (this.opts.rememberUpgrade &&\n            Socket.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1) {\n            transport = \"websocket\";\n        }\n        else if (0 === this.transports.length) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emit(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        else {\n            transport = this.transports[0];\n        }\n        this.readyState = \"opening\";\n        // Retry with the next transport if the transport is disabled (jsonp: false)\n        try {\n            transport = this.createTransport(transport);\n        }\n        catch (e) {\n            this.transports.shift();\n            this.open();\n            return;\n        }\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @api private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this.onDrain.bind(this))\n            .on(\"packet\", this.onPacket.bind(this))\n            .on(\"error\", this.onError.bind(this))\n            .on(\"close\", () => {\n            this.onClose(\"transport close\");\n        });\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} transport name\n     * @api private\n     */\n    probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        Socket.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", msg => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emit(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    Socket.priorWebsocketSuccess = \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emit(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emit(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = err => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emit(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        transport.open();\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @api private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        Socket.priorWebsocketSuccess = \"websocket\" === this.transport.name;\n        this.emit(\"open\");\n        this.flush();\n        // we check for `readyState` in case an `open`\n        // listener already closed the socket\n        if (\"open\" === this.readyState &&\n            this.opts.upgrade &&\n            this.transport.pause) {\n            let i = 0;\n            const l = this.upgrades.length;\n            for (; i < l; i++) {\n                this.probe(this.upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Handles a packet.\n     *\n     * @api private\n     */\n    onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emit(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emit(\"heartbeat\");\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this.resetPingTimeout();\n                    this.sendPacket(\"pong\");\n                    this.emit(\"ping\");\n                    this.emit(\"pong\");\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this.onError(err);\n                    break;\n                case \"message\":\n                    this.emit(\"data\", packet.data);\n                    this.emit(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @api private\n     */\n    onHandshake(data) {\n        this.emit(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this.upgrades = this.filterUpgrades(data.upgrades);\n        this.pingInterval = data.pingInterval;\n        this.pingTimeout = data.pingTimeout;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this.resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @api private\n     */\n    resetPingTimeout() {\n        this.clearTimeoutFn(this.pingTimeoutTimer);\n        this.pingTimeoutTimer = this.setTimeoutFn(() => {\n            this.onClose(\"ping timeout\");\n        }, this.pingInterval + this.pingTimeout);\n        if (this.opts.autoUnref) {\n            this.pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @api private\n     */\n    onDrain() {\n        this.writeBuffer.splice(0, this.prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this.prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emit(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @api private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            this.transport.send(this.writeBuffer);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this.prevBufferLen = this.writeBuffer.length;\n            this.emit(\"flush\");\n        }\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} message.\n     * @param {Function} callback function.\n     * @param {Object} options.\n     * @return {Socket} for chaining.\n     * @api public\n     */\n    write(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    send(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} callback function.\n     * @api private\n     */\n    sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options\n        };\n        this.emit(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     *\n     * @api public\n     */\n    close() {\n        const close = () => {\n            this.onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @api private\n     */\n    onError(err) {\n        Socket.priorWebsocketSuccess = false;\n        this.emit(\"error\", err);\n        this.onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @api private\n     */\n    onClose(reason, desc) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this.pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (typeof removeEventListener === \"function\") {\n                removeEventListener(\"offline\", this.offlineEventListener, false);\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emit(\"close\", reason, desc);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this.prevBufferLen = 0;\n        }\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} server upgrades\n     * @api private\n     *\n     */\n    filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        let i = 0;\n        const j = upgrades.length;\n        for (; i < j; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\nSocket.protocol = protocol;\nfunction clone(obj) {\n    const o = {};\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            o[i] = obj[i];\n        }\n    }\n    return o;\n}\n","import { Socket } from \"./socket.js\";\nexport default (uri, opts) => new Socket(uri, opts);\n"],"names":["hasCorsModule","XMLHttpRequest","err","self","window","Function","opts","xdomain","hasCORS","e","globalThis","concat","join","pick","obj","attr","reduce","acc","k","hasOwnProperty","NATIVE_SET_TIMEOUT","setTimeout","NATIVE_CLEAR_TIMEOUT","clearTimeout","installTimerFunctions","useNativeTimers","setTimeoutFn","bind","clearTimeoutFn","Emitter","key","prototype","mixin","module","on","addEventListener","event","fn","_callbacks","this","push","once","off","apply","arguments","removeListener","removeAllListeners","removeEventListener","length","cb","callbacks","i","splice","emit","args","Array","len","slice","listeners","hasListeners","PACKET_TYPES","Object","create","PACKET_TYPES_REVERSE","keys","forEach","ERROR_PACKET","type","data","withNativeBlob","Blob","toString","call","withNativeArrayBuffer","ArrayBuffer","encodePacket","supportsBinary","callback","encodeBlobAsBase64","isView","buffer","fileReader","FileReader","onload","content","result","split","readAsDataURL","chars","lookup","Uint8Array","charCodeAt","prev","decodePacket","encodedPacket","binaryType","mapBinary","charAt","decodeBase64Packet","substring","decoded","base64","encoded1","encoded2","encoded3","encoded4","bufferLength","p","arraybuffer","bytes","decode","SEPARATOR","String","fromCharCode","Transport","writable","query","readyState","socket","msg","desc","Error","description","doOpen","doClose","onClose","packets","write","packet","onPacket","alphabet","map","seed","encode","num","encoded","Math","floor","yeast","now","Date","str","yeast_1","encodeURIComponent","qs","qry","pairs","l","pair","decodeURIComponent","Polling","polling","poll","onPause","pause","_this2","total","doPoll","encodedPayload","encodedPackets","decodedPacket","decodePayload","_this3","onOpen","close","_this4","count","encodePayload","_this5","doWrite","schema","secure","port","timestampRequests","timestampParam","sid","b64","Number","encodedQuery","parseqs","hostname","indexOf","path","XMLHttpRequestModule","empty","hasXHR2","responseType","XHR","location","isSSL","protocol","xd","xs","forceBase64","Request","uri","req","request","method","onError","onData","pollXhr","async","undefined","xscheme","xhr","open","extraHeaders","setDisableHeaderCheck","setRequestHeader","withCredentials","requestTimeout","timeout","onreadystatechange","status","onLoad","send","document","index","requestsCount","requests","cleanup","onSuccess","fromError","abort","responseText","attachEvent","unloadHandler","nextTick","Promise","resolve","then","WebSocket","MozWebSocket","isReactNative","navigator","product","toLowerCase","WS","check","protocols","headers","ws","addEventListeners","onopen","autoUnref","_socket","unref","onclose","onmessage","ev","onerror","lastPacket","name","transports","websocket","re","parts","parseuri","src","b","replace","m","exec","source","host","authority","ipv6uri","pathNames","regx","names","substr","queryKey","$0","$1","$2","Socket","_this","writeBuffer","prevBufferLen","_extends","agent","upgrade","rememberUpgrade","rejectUnauthorized","perMessageDeflate","threshold","transportOptions","closeOnBeforeunload","id","upgrades","pingInterval","pingTimeout","pingTimeoutTimer","transport","offlineEventListener","o","clone","EIO","priorWebsocketSuccess","createTransport","shift","setTransport","onDrain","failed","onTransportOpen","upgrading","flush","freezeTransport","error","onTransportClose","onupgrade","to","probe","onHandshake","JSON","parse","resetPingTimeout","sendPacket","code","filterUpgrades","options","compress","_this6","cleanupAndClose","waitForUpgrade","reason","filteredUpgrades","j"],"mappings":"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"}